Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000	
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = id, 10000
ii. Hours = business_id, 1562
iii. Category = business_id, 2643
iv. Attribute = business_id, 1115
v. Review = business_id, 8090; user_id, 9581, id 
vi. Checkin = business_id, checkin
vii. Photo = business_id, 6493; id, 10000
viii. Tip = user_id, 537; business_id, 3979
ix. User = id, 10000
x. Friend = user_id, 11
xi. Elite_years = user_id, 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: NO
	
	
	SQL code used to arrive at answer:
	SELECT COUNT(* ) from User
		where id is NULL OR
			  name is NULL OR
			  review_count IS NULL OR
			  yelping_since IS NULL OR
			  useful IS NULL OR 
			  funny IS NULL OR 
			  cool IS NULL OR 
			  fans IS NULL OR 
			  average_stars IS NULL OR 
			  compliment_hot IS NULL OR 
			  compliment_more IS NULL OR 
			  compliment_profile IS NULL OR 
			  compliment_cute IS NULL OR 
			  compliment_list IS NULL OR 
			  compliment_note IS NULL OR 
			  compliment_plain IS NULL OR 
			  compliment_cool IS NULL OR 
			  compliment_funny IS NULL OR 
			  compliment_writer IS NULL OR 
			  compliment_photos IS NULL
	
	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:	1	max:	5	avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min:	1	max:	5	avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min:	0	max:	2	avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min:	1	max:	53	avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min:	0	max:	2000	avg: 24.2955
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
	
	SELECT city,sum(review_count) as nreviews 
		FROM business
		GROUP BY city
		ORDER BY nreview DESC
	
	
	Copy and Paste the Result Below:
	
	city            | nreviews |
		+-----------------+---------+
		| Las Vegas       |   82854 |
		| Phoenix         |   34503 |
		| Toronto         |   24113 |
		| Scottsdale      |   20614 |
		| Charlotte       |   12523 |
		| Henderson       |   10871 |
		| Tempe           |   10504 |
		| Pittsburgh      |    9798 |
		| Montréal        |    9448 |
		| Chandler        |    8112 |
		| Mesa            |    6875 |
		| Gilbert         |    6380 |
		| Cleveland       |    5593 |
		| Madison         |    5265 |
		| Glendale        |    4406 |
		| Mississauga     |    3814 |
		| Edinburgh       |    2792 |
		| Peoria          |    2624 |
		| North Las Vegas |    2438 |
		| Markham         |    2352 |
		| Champaign       |    2029 |
		| Stuttgart       |    1849 |
		| Surprise        |    1520 |
		| Lakewood        |    1465 |
		| Goodyear        |    1155 |
		+-----------------+---------+

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:
	SELECT stars, sum(review_count) from business
			WHERE city = 'Avon'
			GROUP By stars

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
		+-------+-------------------+
		| stars | sum(review_count) |
		+-------+-------------------+
		|   1.5 |                10 |
		|   2.5 |                 6 |
		|   3.5 |                88 |
		|   4.0 |                21 |
		|   4.5 |                31 |
		|   5.0 |                 3 |
		+-------+-------------------+


ii. Beachwood

SQL code used to arrive at answer:
	SELECT stars, sum(review_count) from business
		WHERE city = 'Beachwood'
		GROUP BY stars

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
		+-------+-------------------+
		| stars | sum(review_count) |
		+-------+-------------------+
		|   2.0 |                 8 |
		|   2.5 |                 3 |
		|   3.0 |                11 |
		|   3.5 |                 6 |
		|   4.0 |                69 |
		|   4.5 |                17 |
		|   5.0 |                23 |
		+-------+-------------------+	
		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
		SELECT
			id, 
			name,
			review_count 
		FROM user
		ORDER BY review_count DESC
		LIMIT 3
		
	Copy and Paste the Result Below:
		+------------------------+--------+--------------+
		| id                     | name   | review_count |
		+------------------------+--------+--------------+
		| -G7Zkl1wIWBBmD0KRy_sCw | Gerald |         2000 |
		| -3s52C4zL_DHRK0ULG6qtg | Sara   |         1629 |
		| -8lbUNlXVSoXqaRRiHiSNg | Yuri   |         1339 |
		+------------------------+--------+--------------+


8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
	Using the code: 
			SELECT id,
		       name,
		       review_count,
		       fans,
		       yelping_since
		FROM user
		ORDER BY fans DESC
	we get: 
	+------------------------+-----------+--------------+------+---------------------+
		| id                     | name      | review_count | fans | yelping_since       |
		+------------------------+-----------+--------------+------+---------------------+
		| -9I98YbNQnLdAmcYfb324Q | Amy       |          609 |  503 | 2007-07-19 00:00:00 |
		| -8EnCioUmDygAbsYZmTeRQ | Mimi      |          968 |  497 | 2011-03-30 00:00:00 |
		| --2vR0DIsmQ6WfcSzKWigw | Harald    |         1153 |  311 | 2012-11-27 00:00:00 |
		| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |         2000 |  253 | 2012-12-16 00:00:00 |
		| -0IiMAZI2SsQ7VmyzJjokQ | Christine |          930 |  173 | 2009-07-08 00:00:00 |
		| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |          813 |  159 | 2009-10-05 00:00:00 |
		| -9bbDysuiWeo2VShFJJtcw | Cat       |          377 |  133 | 2009-02-05 00:00:00 |
		| -FZBTkAZEXoP7CYvRV2ZwQ | William   |         1215 |  126 | 2015-02-19 00:00:00 |
		| -9da1xk7zgnnfO1uTVYGkA | Fran      |          862 |  124 | 2012-04-05 00:00:00 |
		| -lh59ko3dxChBSZ9U7LfUw | Lissa     |          834 |  120 | 2007-08-14 00:00:00 |
		| -B-QEUESGWHPE_889WJaeg | Mark      |          861 |  115 | 2009-05-31 00:00:00 |
		| -DmqnhW4Omr3YhmnigaqHg | Tiffany   |          408 |  111 | 2008-10-28 00:00:00 |
		| -cv9PPT7IHux7XUc9dOpkg | bernice   |          255 |  105 | 2007-08-29 00:00:00 |
		| -DFCC64NXgqrxlO8aLU5rg | Roanna    |         1039 |  104 | 2006-03-28 00:00:00 |
		| -IgKkE8JvYNWeGu8ze4P8Q | Angela    |          694 |  101 | 2010-10-01 00:00:00 |
		| -K2Tcgh2EKX6e6HqqIrBIQ | .Hon      |         1246 |  101 | 2006-07-19 00:00:00 |
		| -4viTt9UC44lWCFJwleMNQ | Ben       |          307 |   96 | 2007-03-10 00:00:00 |
		| -3i9bhfvrM3F1wsC9XIB8g | Linda     |          584 |   89 | 2005-08-07 00:00:00 |
		| -kLVfaJytOJY2-QdQoCcNQ | Christina |          842 |   85 | 2012-10-08 00:00:00 |
		| -ePh4Prox7ZXnEBNGKyUEA | Jessica   |          220 |   84 | 2009-01-12 00:00:00 |
		| -4BEUkLvHQntN6qPfKJP2w | Greg      |          408 |   81 | 2008-02-16 00:00:00 |
		| -C-l8EHSLXtZZVfUAUhsPA | Nieves    |          178 |   80 | 2013-07-08 00:00:00 |
		| -dw8f7FLaUmWR7bfJ_Yf0w | Sui       |          754 |   78 | 2009-09-07 00:00:00 |
		| -8lbUNlXVSoXqaRRiHiSNg | Yuri      |         1339 |   76 | 2008-01-03 00:00:00 |
		| -0zEEaDFIjABtPQni0XlHA | Nicole    |          161 |   73 | 2009-04-30 00:00:00 |
		
	Which shows that there is no linear relationship between the number of reviews and the number of fans. 

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: There are more reviews with the word "love" in them.

	
	SQL code used to arrive at answer:

	SELECT 	count(*) AS hatecount FROM review			
		WHERE text LIKE "%hate%"                            		
		+-----------+						
		| hatecount |							 
		+-----------+							  
		|       232 |							  
		+-----------+		


		SELECT 	count(*) AS lovecount FROM review
		WHERE text LIKE "%love%"
		+-----------+
		 | lovecount |
		+-----------+
		 |      1780 |
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	SELECT 
		id, 
		name,
		fans
	FROM user 
	ORDER BY fans desc
	LIMIT 10
	
	
	Copy and Paste the Result Below:

		+------------------------+-----------+------+
		| id                     | name      | fans |
		+------------------------+-----------+------+
		| -9I98YbNQnLdAmcYfb324Q | Amy       |  503 |
		| -8EnCioUmDygAbsYZmTeRQ | Mimi      |  497 |
		| --2vR0DIsmQ6WfcSzKWigw | Harald    |  311 |
		| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |  253 |
		| -0IiMAZI2SsQ7VmyzJjokQ | Christine |  173 |
		| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |  159 |
		| -9bbDysuiWeo2VShFJJtcw | Cat       |  133 |
		| -FZBTkAZEXoP7CYvRV2ZwQ | William   |  126 |
		| -9da1xk7zgnnfO1uTVYGkA | Fran      |  124 |
		| -lh59ko3dxChBSZ9U7LfUw | Lissa     |  120 |
		+------------------------+-----------+------+
	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?
	Yes, they operate at different hours. The 4-5 star resturaunts in Las Vegas, namely, Big Wong Restaurant and Jacques Cafe operate from 10am - 11 pm and 11am - 8 pm respectively. 
	On the other hand, Wingstop, which is rated at 2-3 stars, operates 11am to midnight. 

ii. Do the two groups you chose to analyze have a different number of reviews?
         Yes, both the 4-5 star restaurants have more reviews than the 2-3 star restaurant. 
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
The 4-5 star restaurants operate in remotely similar areas, since their postal codes (zip codes) are only 12 area codes / digits apart; 89146 and 89134. 
The 2-3 star restaurant operates in a different area since the respective area code 89103 is further off than the other two are from each other. 

SQL code used for analysis:

	SELECT 
		b.name,
		b.stars,
		b.city,
		c.category,
		b.review_count,
		h.hours,
		b.postal_code,
	CASE
		WHEN b.stars >= 2 AND b.stars <= 3
		THEN '2-3 STARS'
		WHEN b.stars >= 4 AND b.stars <= 5
		THEN '4-5 STARS'
	END AS RATE
	FROM 
		business as b 
		INNER JOIN category as c ON b.id = c.business_id
		INNER JOIN hours as h ON b.id = h.business_id
	WHERE b.city = 'Las Vegas' AND c.category = 'Restaurants' AND RATE IN ('2-3 STARS', '4-5 STARS')
	GROUP BY b.name
	ORDER BY b.stars DESC

		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
         There are 1520 business that are not open (which have an average star rating of 3.52), compared to the 84802 business that are open (that have an average star rating of 3.68).
         
ii. Difference 2:
         The businesses that are not open average about 23.198 reviews, while the businesses that are open average around 31.757 reviews, which is almost 10 reviews higher. 
         
         
SQL code used for analysis:

		SELECT
			count(distinct id),
			b.is_open,
			avg(stars),
			avg(review_count)
		FROM business as b
		GROUP BY is_open

	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
	I am choosing to do an analysis on the comparison between the star rating of a business and whether or not the business is Wheelchair accessible. This analysis is limited 
	to the United States. By ordering the data by star count, we can examine whether or not the highest rated (by stars) business are more often than not Wheelchair accessible.
	I will also only compare businesses that have a minimum review count of 100, so that we can examine a more specific and reliable dataset.  
         
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
    The most important pieces of information I will need for this analysis include the review count (number of reviews of the business), the star rating of the business,
	and whether or not the business is considered WheelChair Accessible. Since this analysis is restricted to the United States, we will also need the location of the business(in which we can suffice using the 
	zipcode of the business). Information that will help us understand our analysis by providing clarity includes the business name, the city that the business is located in,
	and what the datatypes are for the values of all the above attributes. 
	
	For WheelChair Accessibility, the datatype of the attribute associated is a FLOAT. This attribute in particular can either be a "0" or a "1"; where a "0" is attributed to a business that 
	is not wheelchair accessible, and a value of "1" is attributed with a business that IS wheelchair accessible. By using an alias, we can associate a "0" with "Not wheelchair accessible" and a "1",
	with "is wheelchair accessible". Since this dataset includes cities that are outside of the United States, we can use the businesses' associated postal code to select locations local to the United States. 
	This is because we know that the "postal codes" in the United States are actually known as "zipcodes", and these zipcodes always have numerical values ranging from "00000" to "99999". Then, by limiting our 
	results to businesses that have a number of reviews greater than 100, we begin to "trim" our data of any outliers on the lower number of reviews end. Finally,
	we will order this data by the "stars" of the business, and examine if there is a relationship between the star rating and the wheelchair accessibility.
                  
iii. Output of your finished dataset:
	+----------------------------------------+------------+----------+--------+---------+------------------------+
	| name                                   | city       | nreviews | rating | zipcode | Wheelchair Accessible? |
	+----------------------------------------+------------+----------+--------+---------+------------------------+
	| Koko Bakery                            | Cleveland  |      162 |    4.0 | 44114   | YES                    |
	| Bootleggers Modern American Smokehouse | Phoenix    |      431 |    4.0 | 85028   | YES                    |
	| Wingstop                               | Las Vegas  |      123 |    3.0 | 89103   | YES                    |
	| Mad Mex - South Hills                  | Pittsburgh |      103 |    3.0 | 15220   | YES                    |
	+----------------------------------------+------------+----------+--------+---------+------------------------+
         
         
iv. Provide the SQL code you used to create your final dataset:

SELECT 
    b.name,
    b.city,
    b.review_count as nreviews,
    b.stars as rating,
    b.postal_code as zipcode,
    CASE 
        WHEN a.value = '1' THEN "YES"
        ELSE "NO"
    END AS "Wheelchair Accessible?"
FROM business as b INNER JOIN attribute as a
ON b.id = a.business_id
WHERE 
    a.name = 'WheelchairAccessible' AND 
    (a.value = '1' OR a.value = '0') AND 
    b.review_count > '100' AND
    (b.postal_code BETWEEN '00000' AND '99999')
ORDER BY stars DESC